#include "./lodash.jsxinc"

var l0 = {
        getAllPaths : function(container, pathItemTypes, containerProps, layerProps, notMatchContainerProps, notMatchLayerProps)
        {       
            // Don't use this on selections, needs some more insanities to work!
            // Defaults:
            notMatchContainerProps = this.setDefault(notMatchContainerProps, false)
            notMatchLayerProps = this.setDefault(notMatchLayerProps, false)
            pathItemTypes = this.setDefault(pathItemTypes,  ["PathItem"])

            var allPaths = []
            var containerTypes = ["GroupItem", "Layer"] // coming across a layer shouldn't happen, but it's adobe, who knows?
            if (_.indexOf(pathItemTypes, "CompoundPathItem") == -1) { containerTypes.push("CompoundPathItem") }
            
            getAllPaths_process(container, 0)
            return allPaths
            
            function getAllPaths_process(container, depth)
            {
                    
                if((l0.hasProps(container, containerProps) != notMatchContainerProps) ) {
                    var pageItems = container.length >= 0 ? container : 
                                              (container.typename == "CompoundPathItem" ? container.pathItems : container.pageItems)
                    _.chain(pageItems).filter(function(pageItem) {
                            var isLevelNItem = l0.isLevel0PageItem(pageItem) || container == l0.getParentEx(pageItem)
                            return isLevelNItem && (l0.hasProps(pageItem.layer, layerProps)  != notMatchLayerProps)
                    }).forEach(function(pageItem) 
                    {
                        if(_.contains(pathItemTypes, pageItem.typename)) {allPaths.push(pageItem)}
                        else if(_.contains(containerTypes, pageItem.typename)) {getAllPaths_process(pageItem, depth+1)}
                    })
                }
                depth--
            }
        }, 
        hasProps : function(object, props)
        {
            return !props || ( object && _.where([object], props).length > 0)
        },
        getParentEx : function(object) {
            if(object.typename == "PathItem")
            {
                    var cmpPath = _.find(object.parent.compoundPathItems, function(cmp) {
                        return _.indexOf(cmp.pathItems,object)>= 0;
                    })
            }
            return cmpPath ? cmpPath : object.parent
        }, 
        isLevel0PageItem : function(pageItem)
        {
            var parent = pageItem.parent
            return parent.typename == "Layer" && parent.parent.typename == "Document"
        },
        setDefault : function(v, def)
        {
            return typeof v !== 'undefined' ? v : def
        },
        movePathsToCompound : function(container, cmpnd)
        {
               while(container.pathItems.length > 0) {
                    container.pathItems[0].move(cmpnd, ElementPlacement.PLACEATEND)
               } 
               if(container.compoundPathItems) {
                    while(container.compoundPathItems.length > 0) { 
                         l0.movePathsToCompound(container.compoundPathItems[0], cmpnd)
                          container.compoundPathItems[0].remove()
                    }
               }
         },
        genNewGUID: function(obj)
        {
            // http://stackoverflow.com/a/2117523
            obj.note = 'xxxxxxxx-xxxx-4xxx-yxxx-xxxxxxxxxxxx'.replace(/[xy]/g, function(c) {
                var r = Math.random()*16|0, v = c == 'x' ? r : (r&0x3|0x8);
                return v.toString(16);
             })
            return obj.note
        },
        genGUIDs: function(obj, containerOnly)
        {
            obj = this.setDefault(obj,  app.activeDocument)
            objs = containerOnly  || !obj.pageItems ? [obj] : [obj].concat(_.toArray(obj.pageItems))
            _.chain(objs).filter(function(pI) { return !pI.guid }).forEach(function(pI) { this.genNewGUID(pI) },this)
       },
       getGUID: function(obj)
       {
          mPos = obj.note.search(/[0-9a-f]{8}-(?:[0-9a-f]{4}-){3}[0-9a-f]{12}/i)
          return mPos >= 0 ? obj.note.substr(mPos, 36) : this.genNewGUID(obj)
       },
       reorderPageItem: function(pageItem, count) 
       {
            for(var i=0; i<Math.abs(count); i++) {
                count < 0 ? pageItem.zOrder(ZOrderMethod.BRINGFORWARD) : pageItem.zOrder(ZOrderMethod.SENDBACKWARD)
            }
        }
}